{"version":3,"sources":["Item/Item.styles.ts","Item/Item.tsx","CartItem/CartItem.styles.ts","CartItem/CartItem.tsx","Cart/Cart.styles.ts","Cart/Cart.tsx","App.styles.ts","App.tsx","index.tsx"],"names":["Wrapper","styled","div","Item","item","handleAddToCart","src","image","alt","title","description","price","Button","onClick","CartItem","addToCart","removeFromCart","className","amount","toFixed","size","disableElevation","variant","id","aside","Cart","items","cartItems","length","map","reduce","ack","StyledButton","IconButton","getProducts","a","fetch","json","App","useState","cartOpen","setCartOpen","setCartItems","useQuery","data","isLoading","error","console","log","clickedItem","prev","find","LinearProgress","SwipeableDrawer","anchor","open","onOpen","onClose","Badge","badgeContent","color","Grid","container","spacing","xs","sm","md","client","QueryClient","ReactDOM","render","QueryClientProvider","document","getElementById"],"mappings":"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","file":"static/js/main.af554081.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content:space-between;\r\n  flex-direction:column;\r\n  width:100%;\r\n  border: 1px solid lightblue;\r\n  border-radius:20px;\r\n  height: 100%;\r\n\r\n  button {\r\n    border-radius: 0 0 20px 20px;\r\n  }\r\n  img {\r\n    max-height: 250px;\r\n    object-fit:cover;\r\n    border-radius:20px 20px 0 0;\r\n  } \r\n  div {\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    padding:1rem;\r\n    height: 100%;\r\n  }\r\n`;\r\n","import Button from '@material-ui/core/Button';\r\n//types\r\nimport { CartItemType } from '../App';\r\n//styles\r\nimport { Wrapper } from './Item.styles';\r\n\r\ntype Props = {\r\n  item: CartItemType;\r\n  handleAddToCart: (clickedItem: CartItemType) => void;\r\n}\r\n\r\nconst Item: React.FC<Props> = ({ item, handleAddToCart }) => (\r\n  <Wrapper>\r\n  <img src={item.image} alt={item.title} />\r\n  <div>\r\n    <h3>{item.title}</h3>\r\n    <p>{item.description}</p>\r\n    <h3>${item.price}</h3>\r\n  </div>\r\n  <Button onClick={() => handleAddToCart(item)}>Add to Cart</Button>\r\n  </Wrapper>\r\n);\r\n\r\nexport default Item;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\ndisplay:flex;\r\njustify-content: space-between;\r\nfont-family: Arial, Helvetica, sans-serif;\r\nborder-bottom: 1px solid lightblue;\r\npadding-bottom:20px;\r\n\r\ndiv {\r\n  flex:1;\r\n}\r\n.information, .buttons {\r\n  display:flex;\r\n  justify-content: space-between;\r\n}\r\nimg {\r\n  max-width: 5rem;\r\n  object-fit: cover;\r\n  margin-left: 2.5rem;\r\n}\r\n\r\n`\r\n","import Button from '@material-ui/core/Button'\r\n//types\r\nimport { CartItemType } from '../App';\r\n//styles\r\nimport { Wrapper } from './CartItem.styles'\r\n\r\ntype Props = {\r\n  item:CartItemType;\r\n  addToCart: (clickedItem: CartItemType) => void;\r\n  removeFromCart: (id:number) => void;\r\n}\r\nconst CartItem: React.FC<Props> = ({item, addToCart, removeFromCart}) => \r\n<Wrapper>\r\n  <div>\r\n    <h3>\r\n      {item.title}\r\n    </h3>\r\n    <div className=\"information\">\r\n    <p>Price: ${item.price}</p>\r\n    <p>Total: ${(item.amount * item.price).toFixed(2)}</p>\r\n    </div>\r\n    <div className=\"buttons\">\r\n      <Button \r\n      size=\"small\" \r\n      disableElevation \r\n      variant=\"contained\" \r\n      onClick={() => removeFromCart(item.id)}>\r\n        -\r\n      </Button>\r\n      <p>{item.amount}</p>\r\n      <Button \r\n      size=\"small\" \r\n      disableElevation \r\n      variant=\"contained\" \r\n      onClick={() => addToCart(item)}>\r\n      +\r\n      </Button>\r\n    </div>\r\n  </div>\r\n  <img src={item.image} alt={item.title}/>\r\n</Wrapper>\r\n\r\n\r\nexport default CartItem\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.aside`\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  width: 90%;\r\n  padding:1.25rem;\r\n`\r\n","import CartItem from '../CartItem/CartItem'\r\n//Styles\r\nimport { Wrapper } from './Cart.styles'\r\n//Types\r\nimport { CartItemType } from '../App'\r\nimport React from 'react'\r\n\r\ntype Props = {\r\n  cartItems: CartItemType[];\r\n  addToCart: (clickedItem: CartItemType) => void;\r\n  removeFromCart: (id: number) => void;\r\n}\r\n\r\nconst Cart: React.FC<Props> = ({cartItems, addToCart, removeFromCart}) =>{\r\n  const calculateTotal = (items: CartItemType[]) =>\r\n  items.reduce((ack:number, item) =>\r\n  ack + item.amount * item.price, 0)\r\nreturn (\r\n  <Wrapper>\r\n      <h2>Your Shopping Cart</h2>\r\n      {cartItems.length === 0 ? <p>No items in cart</p> : null}\r\n      {cartItems.map(item =>(\r\n        <CartItem\r\n        key={item.id}\r\n        item={item}\r\n        addToCart={addToCart}\r\n        removeFromCart={removeFromCart}\r\n        \r\n        \r\n        />\r\n      ))}\r\n      <h2>Total: ${calculateTotal(cartItems).toFixed(2)}</h2>\r\n  </Wrapper>\r\n)\r\n}\r\nexport default Cart;\r\n","import styled from 'styled-components';\r\nimport  IconButton  from \"@material-ui/core/IconButton\";\r\nexport const Wrapper = styled.div`\r\n  margin: 2.5rem;\r\n`;\r\n\r\nexport const StyledButton = styled(IconButton)`\r\n  position: fixed;\r\n  z-index: 100;\r\n  right:1.25rem;\r\n  top: 1.25rem;\r\n\r\n`\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useQuery } from 'react-query';\r\n//Components\r\nimport Item from './Item/Item';\r\nimport Cart from './Cart/Cart'\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\n//syles\r\nimport { Wrapper, StyledButton } from './App.styles';\r\n//types\r\nexport type CartItemType = {\r\n  id:number;\r\n  category:string;\r\n  description:string;\r\n  image:string;\r\n  price:number;\r\n  title:string;\r\n  amount:number;\r\n}\r\n\r\n\r\nconst getProducts = async (): Promise<CartItemType[]> => \r\n  await (await fetch('https://fakestoreapi.com/products')).json()\r\n\r\nconst App = () =>{\r\n  const [cartOpen, setCartOpen] = useState(false);\r\n  const [cartItems, setCartItems] = useState([] as CartItemType[]);\r\n  const { data,isLoading,error } = useQuery<CartItemType[]>(\r\n    'products',\r\n     getProducts\r\n     );\r\n    console.log(data);\r\n\r\n  const getTotalItems = (items: CartItemType[]) => \r\n    items.reduce((ack:number, item) => ack + item.amount, 0);\r\n  ;\r\n\r\n  const handleAddToCart = (clickedItem: CartItemType) => {\r\n    setCartItems(prev => {\r\n      //1. Is the item already added in the cart?\r\n      const isItemCart = prev.find(item => item.id === clickedItem.id)\r\n      if (isItemCart){\r\n        return prev.map(item => \r\n          item.id === clickedItem.id \r\n          ? {...item,amount: item.amount + 1} \r\n          : item\r\n          );\r\n      };\r\n      // Frist time is added\r\n      return [...prev, {...clickedItem, amount: 1}];\r\n\r\n    })\r\n  };\r\n  \r\n  const handleRemoveFromCart = (id:number) =>{\r\n    setCartItems(prev =>\r\n      prev.reduce((ack, item) => {\r\n        if (item.id === id){\r\n          if (item.amount === 1 ) return ack;\r\n          return [...ack, {...item,amount: item.amount - 1}]\r\n        }else {\r\n          return [...ack, item]\r\n        }\r\n      },[] as CartItemType[]) \r\n    )\r\n  };\r\n\r\n  if (isLoading) return <LinearProgress />;\r\n  if (error) return <div>Something went wrong...</div>;\r\n\r\n  return (\r\n    <Wrapper>\r\n    <SwipeableDrawer anchor=\"right\" open={cartOpen} onOpen={() => setCartOpen(true)} onClose={() => setCartOpen(false)}>\r\n    <Cart \r\n      cartItems={cartItems} \r\n      addToCart={handleAddToCart}\r\n      removeFromCart={handleRemoveFromCart}\r\n      />\r\n    </SwipeableDrawer>\r\n    <StyledButton onClick={() => setCartOpen(true)}>\r\n      <Badge badgeContent={getTotalItems(cartItems)} color='error'>\r\n        <AddShoppingCartIcon/>\r\n        </Badge>\r\n    </StyledButton>\r\n      <Grid container spacing={3}>\r\n      {data?.map(item =>(\r\n        <Grid item key={item.id}\r\n        xs={12}\r\n        sm={6}\r\n        md={4}\r\n        >\r\n        <Item item={item} handleAddToCart={handleAddToCart} />\r\n        </Grid>\r\n      ))}\r\n      </Grid>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\n\r\nexport default App\r\n","import ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { QueryClient, QueryClientProvider } from 'react-query';\r\n\r\nconst client = new QueryClient();\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <QueryClientProvider client={client}>\r\n    <App /> \r\n  </QueryClientProvider>,\r\n  document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}